/* This file was generated by ./scripts/gen-display-struct.rb, do NOT edit. */
#define GT_DISPLAY_LARGEST_FLAG 42
#define GT_MAX_DISPLAY_FLAG_LENGTH 16
#define GT_SEED_EXTEND_DEFAULT_ALIGNMENT_WIDTH 60
#define GT_SEED_EXTEND_DEFAULT_TRACE_DELTA 50
typedef enum
{
  Gt_Alignment_display /* 0 */,
  Gt_Seed_in_algn_display /* 1 */,
  Gt_Polinfo_display /* 2 */,
  Gt_Seed_display /* 3 */,
  Gt_Failed_seed_display /* 4 */,
  Gt_Fstperquery_display /* 5 */,
  Gt_Tabsep_display /* 6 */,
  Gt_Strandplmi_display /* 7 */,
  Gt_Blast_display /* 8 */,
  Gt_Paf_display /* 9 */,
  Gt_Gfa2_display /* 10 */,
  Gt_Custom_display /* 11 */,
  Gt_Cigar_display /* 12 */,
  Gt_Cigarx_display /* 13 */,
  Gt_Trace_display /* 14 */,
  Gt_Dtrace_display /* 15 */,
  Gt_S_len_display /* 16 */,
  Gt_S_seqnum_display /* 17 */,
  Gt_Subjectid_display /* 18 */,
  Gt_S_start_display /* 19 */,
  Gt_S_end_display /* 20 */,
  Gt_Strand_display /* 21 */,
  Gt_Q_len_display /* 22 */,
  Gt_Q_seqnum_display /* 23 */,
  Gt_Queryid_display /* 24 */,
  Gt_Q_start_display /* 25 */,
  Gt_Q_end_display /* 26 */,
  Gt_Alignmentlength_display /* 27 */,
  Gt_Mismatches_display /* 28 */,
  Gt_Matches_display /* 29 */,
  Gt_Mappingqual_display /* 30 */,
  Gt_Indels_display /* 31 */,
  Gt_Gapopens_display /* 32 */,
  Gt_Score_display /* 33 */,
  Gt_Editdist_display /* 34 */,
  Gt_Identity_display /* 35 */,
  Gt_Seed_len_display /* 36 */,
  Gt_Seed_s_display /* 37 */,
  Gt_Seed_q_display /* 38 */,
  Gt_S_seqlen_display /* 39 */,
  Gt_Q_seqlen_display /* 40 */,
  Gt_Evalue_display /* 41 */,
  Gt_Bitscore_display /* 42 */
} GtSeedExtendDisplay_enum;
bool gt_querymatch_seed_in_algn_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_polinfo_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_seed_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_failed_seed_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_fstperquery_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_tabsep_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_strandplmi_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_blast_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_paf_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_gfa2_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_custom_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_cigar_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_cigarX_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_trace_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_dtrace_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_s_len_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_s_seqnum_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_subjectid_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_s_start_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_s_end_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_strand_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_q_len_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_q_seqnum_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_queryid_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_q_start_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_q_end_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_alignmentlength_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_mismatches_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_matches_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_mappingqual_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_indels_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_gapopens_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_score_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_editdist_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_identity_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_seed_len_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_seed_s_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_seed_q_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_s_seqlen_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_q_seqlen_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_evalue_display(const GtSeedExtendDisplayFlag *);
bool gt_querymatch_bitscore_display(const GtSeedExtendDisplayFlag *);
